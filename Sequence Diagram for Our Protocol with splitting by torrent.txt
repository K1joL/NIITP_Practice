@startuml

participant Отправитель as S
participant Получатель as R1
participant "Получатель 2" as R2

S -> S  : запрашивает документ из базы данных с помощью ORM
S -> S  : формирует составные части документа
S -> S  : формирует torrent файлы для каждой составной части, если необходимо

S -> S  : формирует заголовочный файл xml
S -> R1 : отправляет заголовочный файл
R1 -> R1: проверяет наличие составных частей
R1 -> R1: формирует magnet ссылки для составных\nчастей из заголовочного файла
S -> R1 : уведомляет о готовности

R1 --> S : подключается к отправителю по протоколу bittorrent и начинает загрузку
S -> R2 : передает запрос на загрузку другим узлам (Получатель 2)
R2 --> S: отправляет ответ об отсутствии составных частей файла
S -> R1 : передает составные части
R1 -> R1: проверяет полученный документ
R1 -> R1: загружает документ в базу данных с помощью ORM
R1 -> R1: становится источником 

S -> R2 : отправляет заголовочный файл
R2 -> R2: проверяет наличие составных частей
R2 -> R2: формирует magnet ссылки для составных\nчастей из заголовочного файла
S -> R2 : уведомляет о готовности
R2 --> S: подключается к отправителю по протоколу bittorrent и начинает загрузку
S -> R1 : передает запрос на загрузку другим узлам (Получатель)
R1 --> S: отправляет ответ о наличии составных частей файла
S -> R2 : сообщает об узле источнике (Получатель)
R2 -> R1: подключается к Получателю\nи запрашивает составные части
R1 -->R2: уведомляет о готовности
S -> R2 : передает составные части
R1 -> R2: передает составные части
R2 -> R2: проверяет полученный документ
R2 -> R2: загружает документ в базу данных с помощью ORM
R2 -> R2: становится источником

@enduml